function init(self)
    self.anger = nil
    self.t = 0

    self.is_server = false
end

function fixed_update(self, dt)
    if not self.is_server then
        return
    end
    
    if self.anger then
        local current_position = go.get_position()
        local anger_position = go.get_position(self.anger)
        
        -- Calculate the control point for the Bezier curve
        local control_point = (current_position + anger_position) * 0.5 + vmath.vector3(0, 50, 0) -- Adjust the offset as needed
        
        -- Update the t parameter based on dt
        self.t = self.t + dt * 0.01 -- Adjust the speed as needed
        if self.t > 1 then self.t = 0 end
        
        -- Calculate the Bezier curve point
        local bezier_point = (1 - self.t) * (1 - self.t) * current_position + 2 * (1 - self.t) * self.t * control_point + self.t * self.t * anger_position
        
        -- Move the object towards the Bezier curve point
        go.set_position(bezier_point)
    end
end

function on_message(self, message_id, message, sender)
    -- Need some way to set chef is_server so doing it through messages
    if message_id == hash('is_server') then
        self.is_server = true
    -- Network calls to tell client to change animation
    elseif message_id == hash('chef_chop') then
        sprite.play_flipbook("#sprite", "chef_chop")
    elseif message_id == hash('chef_angy') then
        sprite.play_flipbook("#sprite", "chef_angy")
    end

    if not self.is_server then
        return
    end
    
    if message_id == hash("make_angry") and sender ~= self.anger then
        self.anger = sender
        self.t = 0 -- Reset t when a new anger target is set
    elseif message_id == hash("trigger_response") and message.other_group == hash("player") then
        if message.enter then
            sprite.play_flipbook("#sprite", "chef_chop")
            msg.post('/networking#networking', 'send_to_all_clients', { command = 'chef_chop' })
        else
            sprite.play_flipbook("#sprite", "chef_angy")
            msg.post('/networking#networking', 'send_to_all_clients', { command = 'chef_angy' })
        end
    end
end
