go.property('is_server', false)

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if not self.is_server then
		return
	end
	
	if message_id == hash("trigger_response") and message.other_group == hash("player") then
		local is_disabled = go.get(msg.url(nil, message.other_id, 'player'), 'is_disabled')
		
		if message.enter and not is_disabled then
			local winned_id = go.get(msg.url(nil, message.other_id, 'player'), 'client_id')

			local pos = go.get_position()
			pos.y = pos.y + 50
			go.set_position(pos, message.other_id)
			
			-- Tell who winned to client sides
			msg.post('/networking#networking', 'send_to_all_clients', {
				command = 'winned',
				winned_id = winned_id
			})

			-- Server side
			msg.post(msg.url(nil, message.other_id, 'player'), 'winned')

			sprite.play_flipbook("#win_chef", "chef_down")
			timer.delay(0.5, false, function()
				sprite.play_flipbook("#win_chef", "chef_knife_up")
				msg.post('/networking#networking', 'send_to_all_clients', { command = 'win_chef_up' })
			end)
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
